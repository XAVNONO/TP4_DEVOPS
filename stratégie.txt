>> Objectif : Chaîne de déploiement continue pour les applications en Python

>> Outil utilisé : Jenkins Orchestration

>> Détail du Pipeline:

###################################################################################################
pipeline {

    //>>>>>Définition paramétres d'environnements et images
            environment {

    
        agent any
    
    //>>>>>Récupérer l’image sur le docker hub
        stages {
            stage('Image docker hub') {
    
    //>>>>>Choix d'environnements : >DEV >TEST >PROD

    //>>>>>DEV "Dans une VM sur le cloud => simple docker run"        
            stage('Run appli') {
    

    //>>>>>TEST "Dans une VM => Docker compose pour test"
            stage('test Docker Docker Scout') {

    
    //>>>>>PROD "Déploiement kubernetes"
            stage('Run kubernetes') {

            
    //>>>>>Vérification "Test déploiement et rapport de test"
             stage('Rapport de test') {


###################################################################################################
#Pipeline de base :

pipeline {
    agent any
    options {
        skipStagesAfterUnstable()
    }
   
    stages {

//>>>>> Récupérer l’image sur le docker hub <<<<<//
        stage('Push') {
            steps {
                sh 'docker pull xavnono/mypythonapp'
            }
        }

//>>>>> DEV "Dans une VM sur le cloud => simple docker run" <<<<<//
        stage('Build_DEV') {
            steps {
                sh 'docker run -d --name mypythonapp-dev -p 8080:80 xavnono/mypythonapp:tagname'
            }
        }

//>>>>> TEST "Dans une VM => Docker compose pour test" <<<<<//        
        stage('Scout_TEST') {
            steps {
                sh 'docker-compose up -d'
                sleep 30
                sh 'docker-compose exec scout scout mypythonapp:80'
                sh 'docker-compose down'
            }
        }
        
//>>>>> PROD "Déploiement kubernetes" <<<<<//        
        stage('Deploy_PROD') {
            steps {
                sh 'kubectl apply -f deployment.yaml'
                sh 'kubectl rollout status deployment/mypythonapp-deployment'
            }
        }

    }
}

###################################################################################################
docker-compose.yml
'''
version: '3'
services:
  mypythonapp:
    image: xavnono/mypythonapp:tagname
    ports:
      - "8080:80"
  scout:
    image: scoutapp/docker-scout
    depends_on:
      - mypythonapp
    command: "scout mypythonapp:80"
'''
###################################################################################################
deployment.yaml
'''
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mypythonapp-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mypythonapp
  template:
    metadata:
      labels:
        app: mypythonapp
    spec:
      containers:
      - name: mypythonapp
        image: xavnono/mypythonapp:tagname
        ports:
        - containerPort: 80
'''
###################################################################################################




