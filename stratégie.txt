>> Objectif : Chaîne de déploiement continue pour les applications en Python

>> Outil utilisé : Jenkins Orchestration

>> Détail du Pipeline:

###################################################################################################
pipeline {
  agent any
  options {
      skipStagesAfterUnstable()
  }
 
  stages {

//>>>>> Récupérer l’image sur le docker hub <<<<<//
      stage('Push') {
          steps {
              sh 'docker pull xavnono/python_app:latest'
          }
      }

//>>>>> DEV "Dans une VM sur le cloud => simple docker run" <<<<<//
      stage('Build_DEV') {
          steps {
              sh 'docker run -d --name python_app_dev -p 8000:8888 xavnono/python_app:latest'
          }
      }

//>>>>> TEST "Dans une VM => Docker compose pour test" <<<<<//        
      stage('Scout_TEST') {
          steps {
              sh 'docker-compose up -d'
              sleep 30
              sh 'docker-compose exec scout scout python_app:8088'
              sh 'docker-compose down'
          }
      }
      
//>>>>> PROD "Déploiement kubernetes" <<<<<//        
      stage('Deploy_PROD') {
          steps {
              sh 'kubectl apply -f deployment.yaml'
              sh 'kubectl rollout status deployment/python_app_deployment'
          }
      }

  }
}

###################################################################################################
docker-compose.yml
'''
version: '3'

services:
  scout-cli:
    image: docker/scout-cli
    environment:
      - DOCKER_SCOUT_HUB_USER=xavnono
      - DOCKER_SCOUT_HUB_PASSWORD=dckr_pat_4J2oyGlyWzsg8HafBxz4YnTOqhQ
    command: cves xavnono/python-app --exit-code --only-severity critical,high

  # python_app:
  #   image: xavnono/python-app
'''
###################################################################################################
deployment.yaml
'''
apiVersion: apps/v1            # Version API Kubernetes
kind: Deployment
metadata:
  name: python-app-deployment    # Nom du déploiement
spec:                        # spécification du déploiement
  replicas: 3                    # Nombres de répliques du déploiement
  selector:
    matchLabels:
      app: python-app            # Etiquettes et valeur qui doivent être associés aux PODs de ce déploiement
  template:
    metadata:
      labels:
        app: python-app          # Etiquettes et valeur associés aux PODs générés
    spec:                    # spécification du POD
      imagePullSecrets:
      - name: regcred        # Mes credentials pour le HubDocker
      containers:
      - name: python-app                    # Nom du conteneur
        image: xavnono/python-app:latest    # Image Docker utilisée
        ports:
        - containerPort: 8900              # Port d'écoute du conteneur
'''
###################################################################################################




